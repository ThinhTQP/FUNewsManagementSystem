@model FUNews.DAL.Entities.NewsArticle

@{
    ViewData["Title"] = "News Article Details";
}

<div class="container mt-4">
    <h1 class="text-center">News Article Details</h1>

    <!-- Card Container -->
    <div class="card">
        <div class="card-body">

            <!-- News Article Details Table -->
            <table class="table table-bordered table-striped">
                <tbody>
                    <tr>
                        <th class="col-sm-2">@Html.DisplayNameFor(model => model.NewsArticleId)</th>
                        <td>@Html.DisplayFor(model => model.NewsArticleId)</td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.NewsTitle)</th>
                        <td>@Html.DisplayFor(model => model.NewsTitle)</td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Headline)</th>
                        <td>@Html.DisplayFor(model => model.Headline)</td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.CreatedDate)</th>
                        <td>@Html.DisplayFor(model => model.CreatedDate)</td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.NewsContent)</th>
                        <td>@Html.DisplayFor(model => model.NewsContent)</td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.NewsSource)</th>
                        <td>@Html.DisplayFor(model => model.NewsSource)</td>
                    </tr>
                    <tr>
                        <
                        <th>@Html.DisplayNameFor(model => model.NewsStatus)</th>
                        <td>
                            @(Model.NewsStatus ? "Active" : "Inactive")
                        </td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.UpdatedById)</th>
                        <td>@Html.DisplayFor(model => model.UpdatedById)</td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.ModifiedDate)</th>
                        <td>@Html.DisplayFor(model => model.ModifiedDate)</td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Category.CategoryName)</th>
                        <td>@Html.DisplayFor(model => model.Category.CategoryName)</td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.CreatedBy)</th>
                        <td>@Html.DisplayFor(model => model.CreatedBy.AccountName)</td>
                    </tr>
                    <tr>
                        <th>Tags</th>
                        <td>
                            @if (Model.Tags != null && Model.Tags.Any())
                            {
                                <ul class="list-inline">
                                    @foreach (var tag in Model.Tags)
                                    {
                                        <li class="list-inline-item badge bg-secondary">@tag.TagName</li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p class="text-muted">No tags available.</p>
                            }
                        </td>
                    </tr>
                </tbody>
            </table>

        </div>
    </div>

    <!-- Action Buttons -->
    <div class="mt-4 text-center">
    
        <a class="btn btn-secondary" asp-action="Index">Back to List</a>
    </div>
</div>
